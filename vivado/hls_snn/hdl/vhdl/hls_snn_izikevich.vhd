-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity hls_snn_izikevich is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    input_stream0_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    input_stream0_TVALID : IN STD_LOGIC;
    input_stream0_TREADY : OUT STD_LOGIC;
    input_stream0_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
    input_stream0_TSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
    input_stream0_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    input_stream1_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    input_stream1_TVALID : IN STD_LOGIC;
    input_stream1_TREADY : OUT STD_LOGIC;
    input_stream1_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
    input_stream1_TSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
    input_stream1_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    input_stream2_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    input_stream2_TVALID : IN STD_LOGIC;
    input_stream2_TREADY : OUT STD_LOGIC;
    input_stream2_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
    input_stream2_TSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
    input_stream2_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    input_stream3_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    input_stream3_TVALID : IN STD_LOGIC;
    input_stream3_TREADY : OUT STD_LOGIC;
    input_stream3_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
    input_stream3_TSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
    input_stream3_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    output_stream_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    output_stream_TVALID : OUT STD_LOGIC;
    output_stream_TREADY : IN STD_LOGIC;
    output_stream_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
    output_stream_TSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
    output_stream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of hls_snn_izikevich is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "hls_snn_izikevich_hls_snn_izikevich,hls_ip_2023_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=40.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=28.252000,HLS_SYN_LAT=204,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=6471,HLS_SYN_LUT=7144,HLS_VERSION=2023_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (13 downto 0) := "00000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (13 downto 0) := "00000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (13 downto 0) := "00000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (13 downto 0) := "00010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (13 downto 0) := "00100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal state : STD_LOGIC_VECTOR (0 downto 0);
    signal p_input : STD_LOGIC_VECTOR (31 downto 0);
    signal output_indexes_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_indexes_ce0 : STD_LOGIC;
    signal output_indexes_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal neuron_type_mem_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal neuron_type_mem_1 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal output_indexes_mem_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal output_indexes_mem_1 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal v_mem_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal v_mem_ce0 : STD_LOGIC;
    signal v_mem_we0 : STD_LOGIC;
    signal v_mem_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_mem_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_mem_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal v_mem_ce1 : STD_LOGIC;
    signal v_mem_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal u_mem_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal u_mem_ce0 : STD_LOGIC;
    signal u_mem_we0 : STD_LOGIC;
    signal u_mem_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal u_mem_ce1 : STD_LOGIC;
    signal u_mem_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_mem_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_mem_ce0 : STD_LOGIC;
    signal p_mem_we0 : STD_LOGIC;
    signal p_mem_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal synapse_s_mem_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal synapse_s_mem_ce0 : STD_LOGIC;
    signal synapse_s_mem_we0 : STD_LOGIC;
    signal synapse_s_mem_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal synapse_s_mem_ce1 : STD_LOGIC;
    signal synapse_s_mem_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal firings_mem_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal output_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal state_read_read_fu_174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal state_read_reg_428 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_input_read_reg_432 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal c_fu_414_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_ap_start : STD_LOGIC;
    signal grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_ap_done : STD_LOGIC;
    signal grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_ap_idle : STD_LOGIC;
    signal grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_ap_ready : STD_LOGIC;
    signal grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_input_stream0_TREADY : STD_LOGIC;
    signal grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_neuron_type_mem_0_o : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_neuron_type_mem_0_o_ap_vld : STD_LOGIC;
    signal grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_neuron_type_mem_1_o : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_neuron_type_mem_1_o_ap_vld : STD_LOGIC;
    signal grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_ap_start : STD_LOGIC;
    signal grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_ap_done : STD_LOGIC;
    signal grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_ap_idle : STD_LOGIC;
    signal grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_ap_ready : STD_LOGIC;
    signal grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_p_mem_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_p_mem_ce0 : STD_LOGIC;
    signal grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_p_mem_we0 : STD_LOGIC;
    signal grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_p_mem_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_ap_start : STD_LOGIC;
    signal grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_ap_done : STD_LOGIC;
    signal grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_ap_idle : STD_LOGIC;
    signal grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_ap_ready : STD_LOGIC;
    signal grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_v_mem_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_v_mem_ce0 : STD_LOGIC;
    signal grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_v_mem_we0 : STD_LOGIC;
    signal grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_v_mem_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_u_mem_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_u_mem_ce0 : STD_LOGIC;
    signal grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_u_mem_we0 : STD_LOGIC;
    signal grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_u_mem_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_ap_start : STD_LOGIC;
    signal grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_ap_done : STD_LOGIC;
    signal grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_ap_idle : STD_LOGIC;
    signal grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_ap_ready : STD_LOGIC;
    signal grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_synapse_s_mem_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_synapse_s_mem_ce0 : STD_LOGIC;
    signal grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_synapse_s_mem_we0 : STD_LOGIC;
    signal grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_synapse_s_mem_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_synapse_s_mem_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_synapse_s_mem_ce1 : STD_LOGIC;
    signal grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_v_mem_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_v_mem_ce0 : STD_LOGIC;
    signal grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_p_mem_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_p_mem_ce0 : STD_LOGIC;
    signal grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_grp_fu_465_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_grp_fu_465_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_grp_fu_465_p_opcode : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_grp_fu_465_p_ce : STD_LOGIC;
    signal grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_grp_fu_469_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_grp_fu_469_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_grp_fu_469_p_ce : STD_LOGIC;
    signal grp_snn_get_synaptic_conductances_fu_296_ap_start : STD_LOGIC;
    signal grp_snn_get_synaptic_conductances_fu_296_ap_done : STD_LOGIC;
    signal grp_snn_get_synaptic_conductances_fu_296_ap_idle : STD_LOGIC;
    signal grp_snn_get_synaptic_conductances_fu_296_ap_ready : STD_LOGIC;
    signal grp_snn_get_synaptic_conductances_fu_296_input_stream0_TREADY : STD_LOGIC;
    signal grp_snn_get_synaptic_conductances_fu_296_input_stream1_TREADY : STD_LOGIC;
    signal grp_snn_get_synaptic_conductances_fu_296_input_stream2_TREADY : STD_LOGIC;
    signal grp_snn_get_synaptic_conductances_fu_296_input_stream3_TREADY : STD_LOGIC;
    signal grp_snn_get_synaptic_conductances_fu_296_synapse_s_mem_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_snn_get_synaptic_conductances_fu_296_synapse_s_mem_ce0 : STD_LOGIC;
    signal grp_snn_get_synaptic_conductances_fu_296_u_mem_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_snn_get_synaptic_conductances_fu_296_u_mem_ce0 : STD_LOGIC;
    signal grp_snn_get_synaptic_conductances_fu_296_u_mem_we0 : STD_LOGIC;
    signal grp_snn_get_synaptic_conductances_fu_296_u_mem_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_snn_get_synaptic_conductances_fu_296_u_mem_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_snn_get_synaptic_conductances_fu_296_u_mem_ce1 : STD_LOGIC;
    signal grp_snn_get_synaptic_conductances_fu_296_firings_mem_0_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_snn_get_synaptic_conductances_fu_296_firings_mem_0_o_ap_vld : STD_LOGIC;
    signal grp_snn_get_synaptic_conductances_fu_296_v_mem_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_snn_get_synaptic_conductances_fu_296_v_mem_ce0 : STD_LOGIC;
    signal grp_snn_get_synaptic_conductances_fu_296_v_mem_we0 : STD_LOGIC;
    signal grp_snn_get_synaptic_conductances_fu_296_v_mem_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_snn_get_synaptic_conductances_fu_296_grp_fu_465_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_snn_get_synaptic_conductances_fu_296_grp_fu_465_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_snn_get_synaptic_conductances_fu_296_grp_fu_465_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_snn_get_synaptic_conductances_fu_296_grp_fu_465_p_ce : STD_LOGIC;
    signal grp_snn_get_synaptic_conductances_fu_296_grp_fu_469_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_snn_get_synaptic_conductances_fu_296_grp_fu_469_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_snn_get_synaptic_conductances_fu_296_grp_fu_469_p_ce : STD_LOGIC;
    signal grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_ap_start_reg : STD_LOGIC := '0';
    signal grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_snn_get_synaptic_conductances_fu_296_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_block_state10_on_subcall_done : BOOLEAN;
    signal zext_ln74_fu_392_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln74_1_fu_401_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln43_fu_368_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln43_1_fu_378_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal bitcast_ln110_fu_410_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln109_fu_406_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_465_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_465_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_465_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_465_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_465_ce : STD_LOGIC;
    signal grp_fu_469_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_469_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_469_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_469_ce : STD_LOGIC;
    signal regslice_both_output_stream_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state14 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal regslice_both_input_stream0_V_data_V_U_apdone_blk : STD_LOGIC;
    signal input_stream0_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal input_stream0_TVALID_int_regslice : STD_LOGIC;
    signal input_stream0_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_input_stream0_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_input_stream0_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal input_stream0_TKEEP_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_input_stream0_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_input_stream0_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_input_stream0_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal input_stream0_TSTRB_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_input_stream0_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_input_stream0_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_input_stream0_V_last_V_U_apdone_blk : STD_LOGIC;
    signal input_stream0_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_input_stream0_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_input_stream0_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_input_stream1_V_data_V_U_apdone_blk : STD_LOGIC;
    signal input_stream1_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal input_stream1_TVALID_int_regslice : STD_LOGIC;
    signal input_stream1_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_input_stream1_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_input_stream1_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal input_stream1_TKEEP_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_input_stream1_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_input_stream1_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_input_stream1_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal input_stream1_TSTRB_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_input_stream1_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_input_stream1_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_input_stream1_V_last_V_U_apdone_blk : STD_LOGIC;
    signal input_stream1_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_input_stream1_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_input_stream1_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_input_stream2_V_data_V_U_apdone_blk : STD_LOGIC;
    signal input_stream2_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal input_stream2_TVALID_int_regslice : STD_LOGIC;
    signal input_stream2_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_input_stream2_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_input_stream2_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal input_stream2_TKEEP_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_input_stream2_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_input_stream2_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_input_stream2_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal input_stream2_TSTRB_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_input_stream2_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_input_stream2_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_input_stream2_V_last_V_U_apdone_blk : STD_LOGIC;
    signal input_stream2_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_input_stream2_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_input_stream2_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_input_stream3_V_data_V_U_apdone_blk : STD_LOGIC;
    signal input_stream3_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal input_stream3_TVALID_int_regslice : STD_LOGIC;
    signal input_stream3_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_input_stream3_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_input_stream3_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal input_stream3_TKEEP_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_input_stream3_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_input_stream3_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_input_stream3_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal input_stream3_TSTRB_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_input_stream3_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_input_stream3_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_input_stream3_V_last_V_U_apdone_blk : STD_LOGIC;
    signal input_stream3_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_input_stream3_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_input_stream3_V_last_V_U_ack_in : STD_LOGIC;
    signal output_stream_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal output_stream_TVALID_int_regslice : STD_LOGIC;
    signal output_stream_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_output_stream_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_output_stream_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_output_stream_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_output_stream_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_output_stream_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_output_stream_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_output_stream_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_output_stream_V_last_V_U_apdone_blk : STD_LOGIC;
    signal output_stream_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_output_stream_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_output_stream_V_last_V_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;
    signal ap_return : STD_LOGIC_VECTOR (0 downto 0);

    component hls_snn_izikevich_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_stream0_TVALID : IN STD_LOGIC;
        input_stream0_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        input_stream0_TREADY : OUT STD_LOGIC;
        input_stream0_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
        input_stream0_TSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
        input_stream0_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        neuron_type_mem_0_i : IN STD_LOGIC_VECTOR (5 downto 0);
        neuron_type_mem_0_o : OUT STD_LOGIC_VECTOR (5 downto 0);
        neuron_type_mem_0_o_ap_vld : OUT STD_LOGIC;
        neuron_type_mem_1_i : IN STD_LOGIC_VECTOR (5 downto 0);
        neuron_type_mem_1_o : OUT STD_LOGIC_VECTOR (5 downto 0);
        neuron_type_mem_1_o_ap_vld : OUT STD_LOGIC );
    end component;


    component hls_snn_izikevich_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_input_load : IN STD_LOGIC_VECTOR (31 downto 0);
        p_mem_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        p_mem_ce0 : OUT STD_LOGIC;
        p_mem_we0 : OUT STD_LOGIC;
        p_mem_d0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component hls_snn_izikevich_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v_mem_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        v_mem_ce0 : OUT STD_LOGIC;
        v_mem_we0 : OUT STD_LOGIC;
        v_mem_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        u_mem_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        u_mem_ce0 : OUT STD_LOGIC;
        u_mem_we0 : OUT STD_LOGIC;
        u_mem_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component hls_snn_izikevich_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        synapse_s_mem_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        synapse_s_mem_ce0 : OUT STD_LOGIC;
        synapse_s_mem_we0 : OUT STD_LOGIC;
        synapse_s_mem_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        synapse_s_mem_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        synapse_s_mem_ce1 : OUT STD_LOGIC;
        synapse_s_mem_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        v_mem_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        v_mem_ce0 : OUT STD_LOGIC;
        v_mem_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_mem_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        p_mem_ce0 : OUT STD_LOGIC;
        p_mem_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_465_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_465_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_465_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_465_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_465_p_ce : OUT STD_LOGIC;
        grp_fu_469_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_469_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_469_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_469_p_ce : OUT STD_LOGIC );
    end component;


    component hls_snn_izikevich_snn_get_synaptic_conductances IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_stream0_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        input_stream0_TVALID : IN STD_LOGIC;
        input_stream0_TREADY : OUT STD_LOGIC;
        input_stream0_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
        input_stream0_TSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
        input_stream0_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        input_stream1_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        input_stream1_TVALID : IN STD_LOGIC;
        input_stream1_TREADY : OUT STD_LOGIC;
        input_stream1_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
        input_stream1_TSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
        input_stream1_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        input_stream2_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        input_stream2_TVALID : IN STD_LOGIC;
        input_stream2_TREADY : OUT STD_LOGIC;
        input_stream2_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
        input_stream2_TSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
        input_stream2_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        input_stream3_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        input_stream3_TVALID : IN STD_LOGIC;
        input_stream3_TREADY : OUT STD_LOGIC;
        input_stream3_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
        input_stream3_TSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
        input_stream3_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        neuron_type_mem_0 : IN STD_LOGIC_VECTOR (5 downto 0);
        neuron_type_mem_1 : IN STD_LOGIC_VECTOR (5 downto 0);
        synapse_s_mem_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        synapse_s_mem_ce0 : OUT STD_LOGIC;
        synapse_s_mem_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        u_mem_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        u_mem_ce0 : OUT STD_LOGIC;
        u_mem_we0 : OUT STD_LOGIC;
        u_mem_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        u_mem_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        u_mem_ce1 : OUT STD_LOGIC;
        u_mem_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        firings_mem_0_i : IN STD_LOGIC_VECTOR (63 downto 0);
        firings_mem_0_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        firings_mem_0_o_ap_vld : OUT STD_LOGIC;
        v_mem_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        v_mem_ce0 : OUT STD_LOGIC;
        v_mem_we0 : OUT STD_LOGIC;
        v_mem_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        v_mem_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_465_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_465_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_465_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_465_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_465_p_ce : OUT STD_LOGIC;
        grp_fu_469_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_469_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_469_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_469_p_ce : OUT STD_LOGIC );
    end component;


    component hls_snn_izikevich_faddfsub_32ns_32ns_32_2_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component hls_snn_izikevich_fmul_32ns_32ns_32_2_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component hls_snn_izikevich_v_mem_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component hls_snn_izikevich_u_mem_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component hls_snn_izikevich_p_mem_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component hls_snn_izikevich_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        ap_return : IN STD_LOGIC_VECTOR (0 downto 0);
        state : OUT STD_LOGIC_VECTOR (0 downto 0);
        p_input : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_indexes_address0 : IN STD_LOGIC_VECTOR (0 downto 0);
        output_indexes_ce0 : IN STD_LOGIC;
        output_indexes_q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component hls_snn_izikevich_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    v_mem_U : component hls_snn_izikevich_v_mem_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => v_mem_address0,
        ce0 => v_mem_ce0,
        we0 => v_mem_we0,
        d0 => v_mem_d0,
        q0 => v_mem_q0,
        address1 => v_mem_address1,
        ce1 => v_mem_ce1,
        q1 => v_mem_q1);

    u_mem_U : component hls_snn_izikevich_u_mem_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => u_mem_address0,
        ce0 => u_mem_ce0,
        we0 => u_mem_we0,
        d0 => u_mem_d0,
        address1 => grp_snn_get_synaptic_conductances_fu_296_u_mem_address1,
        ce1 => u_mem_ce1,
        q1 => u_mem_q1);

    p_mem_U : component hls_snn_izikevich_p_mem_RAM_AUTO_1R1W
    generic map (
        DataWidth => 1,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => p_mem_address0,
        ce0 => p_mem_ce0,
        we0 => p_mem_we0,
        d0 => grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_p_mem_d0,
        q0 => p_mem_q0);

    synapse_s_mem_U : component hls_snn_izikevich_v_mem_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => synapse_s_mem_address0,
        ce0 => synapse_s_mem_ce0,
        we0 => synapse_s_mem_we0,
        d0 => grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_synapse_s_mem_d0,
        q0 => synapse_s_mem_q0,
        address1 => grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_synapse_s_mem_address1,
        ce1 => synapse_s_mem_ce1,
        q1 => synapse_s_mem_q1);

    grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254 : component hls_snn_izikevich_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_ap_start,
        ap_done => grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_ap_done,
        ap_idle => grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_ap_idle,
        ap_ready => grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_ap_ready,
        input_stream0_TVALID => input_stream0_TVALID_int_regslice,
        input_stream0_TDATA => input_stream0_TDATA_int_regslice,
        input_stream0_TREADY => grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_input_stream0_TREADY,
        input_stream0_TKEEP => input_stream0_TKEEP_int_regslice,
        input_stream0_TSTRB => input_stream0_TSTRB_int_regslice,
        input_stream0_TLAST => input_stream0_TLAST_int_regslice,
        neuron_type_mem_0_i => neuron_type_mem_0,
        neuron_type_mem_0_o => grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_neuron_type_mem_0_o,
        neuron_type_mem_0_o_ap_vld => grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_neuron_type_mem_0_o_ap_vld,
        neuron_type_mem_1_i => neuron_type_mem_1,
        neuron_type_mem_1_o => grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_neuron_type_mem_1_o,
        neuron_type_mem_1_o_ap_vld => grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_neuron_type_mem_1_o_ap_vld);

    grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270 : component hls_snn_izikevich_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_ap_start,
        ap_done => grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_ap_done,
        ap_idle => grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_ap_idle,
        ap_ready => grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_ap_ready,
        p_input_load => p_input_read_reg_432,
        p_mem_address0 => grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_p_mem_address0,
        p_mem_ce0 => grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_p_mem_ce0,
        p_mem_we0 => grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_p_mem_we0,
        p_mem_d0 => grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_p_mem_d0);

    grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278 : component hls_snn_izikevich_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_ap_start,
        ap_done => grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_ap_done,
        ap_idle => grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_ap_idle,
        ap_ready => grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_ap_ready,
        v_mem_address0 => grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_v_mem_address0,
        v_mem_ce0 => grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_v_mem_ce0,
        v_mem_we0 => grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_v_mem_we0,
        v_mem_d0 => grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_v_mem_d0,
        u_mem_address0 => grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_u_mem_address0,
        u_mem_ce0 => grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_u_mem_ce0,
        u_mem_we0 => grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_u_mem_we0,
        u_mem_d0 => grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_u_mem_d0);

    grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286 : component hls_snn_izikevich_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_ap_start,
        ap_done => grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_ap_done,
        ap_idle => grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_ap_idle,
        ap_ready => grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_ap_ready,
        synapse_s_mem_address0 => grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_synapse_s_mem_address0,
        synapse_s_mem_ce0 => grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_synapse_s_mem_ce0,
        synapse_s_mem_we0 => grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_synapse_s_mem_we0,
        synapse_s_mem_d0 => grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_synapse_s_mem_d0,
        synapse_s_mem_address1 => grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_synapse_s_mem_address1,
        synapse_s_mem_ce1 => grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_synapse_s_mem_ce1,
        synapse_s_mem_q1 => synapse_s_mem_q1,
        v_mem_address0 => grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_v_mem_address0,
        v_mem_ce0 => grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_v_mem_ce0,
        v_mem_q0 => v_mem_q0,
        p_mem_address0 => grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_p_mem_address0,
        p_mem_ce0 => grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_p_mem_ce0,
        p_mem_q0 => p_mem_q0,
        grp_fu_465_p_din0 => grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_grp_fu_465_p_din0,
        grp_fu_465_p_din1 => grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_grp_fu_465_p_din1,
        grp_fu_465_p_opcode => grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_grp_fu_465_p_opcode,
        grp_fu_465_p_dout0 => grp_fu_465_p2,
        grp_fu_465_p_ce => grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_grp_fu_465_p_ce,
        grp_fu_469_p_din0 => grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_grp_fu_469_p_din0,
        grp_fu_469_p_din1 => grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_grp_fu_469_p_din1,
        grp_fu_469_p_dout0 => grp_fu_469_p2,
        grp_fu_469_p_ce => grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_grp_fu_469_p_ce);

    grp_snn_get_synaptic_conductances_fu_296 : component hls_snn_izikevich_snn_get_synaptic_conductances
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_snn_get_synaptic_conductances_fu_296_ap_start,
        ap_done => grp_snn_get_synaptic_conductances_fu_296_ap_done,
        ap_idle => grp_snn_get_synaptic_conductances_fu_296_ap_idle,
        ap_ready => grp_snn_get_synaptic_conductances_fu_296_ap_ready,
        input_stream0_TDATA => input_stream0_TDATA_int_regslice,
        input_stream0_TVALID => input_stream0_TVALID_int_regslice,
        input_stream0_TREADY => grp_snn_get_synaptic_conductances_fu_296_input_stream0_TREADY,
        input_stream0_TKEEP => input_stream0_TKEEP_int_regslice,
        input_stream0_TSTRB => input_stream0_TSTRB_int_regslice,
        input_stream0_TLAST => input_stream0_TLAST_int_regslice,
        input_stream1_TDATA => input_stream1_TDATA_int_regslice,
        input_stream1_TVALID => input_stream1_TVALID_int_regslice,
        input_stream1_TREADY => grp_snn_get_synaptic_conductances_fu_296_input_stream1_TREADY,
        input_stream1_TKEEP => input_stream1_TKEEP_int_regslice,
        input_stream1_TSTRB => input_stream1_TSTRB_int_regslice,
        input_stream1_TLAST => input_stream1_TLAST_int_regslice,
        input_stream2_TDATA => input_stream2_TDATA_int_regslice,
        input_stream2_TVALID => input_stream2_TVALID_int_regslice,
        input_stream2_TREADY => grp_snn_get_synaptic_conductances_fu_296_input_stream2_TREADY,
        input_stream2_TKEEP => input_stream2_TKEEP_int_regslice,
        input_stream2_TSTRB => input_stream2_TSTRB_int_regslice,
        input_stream2_TLAST => input_stream2_TLAST_int_regslice,
        input_stream3_TDATA => input_stream3_TDATA_int_regslice,
        input_stream3_TVALID => input_stream3_TVALID_int_regslice,
        input_stream3_TREADY => grp_snn_get_synaptic_conductances_fu_296_input_stream3_TREADY,
        input_stream3_TKEEP => input_stream3_TKEEP_int_regslice,
        input_stream3_TSTRB => input_stream3_TSTRB_int_regslice,
        input_stream3_TLAST => input_stream3_TLAST_int_regslice,
        neuron_type_mem_0 => neuron_type_mem_0,
        neuron_type_mem_1 => neuron_type_mem_1,
        synapse_s_mem_address0 => grp_snn_get_synaptic_conductances_fu_296_synapse_s_mem_address0,
        synapse_s_mem_ce0 => grp_snn_get_synaptic_conductances_fu_296_synapse_s_mem_ce0,
        synapse_s_mem_q0 => synapse_s_mem_q0,
        u_mem_address0 => grp_snn_get_synaptic_conductances_fu_296_u_mem_address0,
        u_mem_ce0 => grp_snn_get_synaptic_conductances_fu_296_u_mem_ce0,
        u_mem_we0 => grp_snn_get_synaptic_conductances_fu_296_u_mem_we0,
        u_mem_d0 => grp_snn_get_synaptic_conductances_fu_296_u_mem_d0,
        u_mem_address1 => grp_snn_get_synaptic_conductances_fu_296_u_mem_address1,
        u_mem_ce1 => grp_snn_get_synaptic_conductances_fu_296_u_mem_ce1,
        u_mem_q1 => u_mem_q1,
        firings_mem_0_i => firings_mem_0,
        firings_mem_0_o => grp_snn_get_synaptic_conductances_fu_296_firings_mem_0_o,
        firings_mem_0_o_ap_vld => grp_snn_get_synaptic_conductances_fu_296_firings_mem_0_o_ap_vld,
        v_mem_address0 => grp_snn_get_synaptic_conductances_fu_296_v_mem_address0,
        v_mem_ce0 => grp_snn_get_synaptic_conductances_fu_296_v_mem_ce0,
        v_mem_we0 => grp_snn_get_synaptic_conductances_fu_296_v_mem_we0,
        v_mem_d0 => grp_snn_get_synaptic_conductances_fu_296_v_mem_d0,
        v_mem_q0 => v_mem_q0,
        grp_fu_465_p_din0 => grp_snn_get_synaptic_conductances_fu_296_grp_fu_465_p_din0,
        grp_fu_465_p_din1 => grp_snn_get_synaptic_conductances_fu_296_grp_fu_465_p_din1,
        grp_fu_465_p_opcode => grp_snn_get_synaptic_conductances_fu_296_grp_fu_465_p_opcode,
        grp_fu_465_p_dout0 => grp_fu_465_p2,
        grp_fu_465_p_ce => grp_snn_get_synaptic_conductances_fu_296_grp_fu_465_p_ce,
        grp_fu_469_p_din0 => grp_snn_get_synaptic_conductances_fu_296_grp_fu_469_p_din0,
        grp_fu_469_p_din1 => grp_snn_get_synaptic_conductances_fu_296_grp_fu_469_p_din1,
        grp_fu_469_p_dout0 => grp_fu_469_p2,
        grp_fu_469_p_ce => grp_snn_get_synaptic_conductances_fu_296_grp_fu_469_p_ce);

    control_s_axi_U : component hls_snn_izikevich_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        ap_return => ap_const_lv1_1,
        state => state,
        p_input => p_input,
        output_indexes_address0 => output_indexes_address0,
        output_indexes_ce0 => output_indexes_ce0,
        output_indexes_q0 => output_indexes_q0);

    faddfsub_32ns_32ns_32_2_full_dsp_1_U87 : component hls_snn_izikevich_faddfsub_32ns_32ns_32_2_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_465_p0,
        din1 => grp_fu_465_p1,
        opcode => grp_fu_465_opcode,
        ce => grp_fu_465_ce,
        dout => grp_fu_465_p2);

    fmul_32ns_32ns_32_2_max_dsp_1_U88 : component hls_snn_izikevich_fmul_32ns_32ns_32_2_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_469_p0,
        din1 => grp_fu_469_p1,
        ce => grp_fu_469_ce,
        dout => grp_fu_469_p2);

    regslice_both_input_stream0_V_data_V_U : component hls_snn_izikevich_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_stream0_TDATA,
        vld_in => input_stream0_TVALID,
        ack_in => regslice_both_input_stream0_V_data_V_U_ack_in,
        data_out => input_stream0_TDATA_int_regslice,
        vld_out => input_stream0_TVALID_int_regslice,
        ack_out => input_stream0_TREADY_int_regslice,
        apdone_blk => regslice_both_input_stream0_V_data_V_U_apdone_blk);

    regslice_both_input_stream0_V_keep_V_U : component hls_snn_izikevich_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_stream0_TKEEP,
        vld_in => input_stream0_TVALID,
        ack_in => regslice_both_input_stream0_V_keep_V_U_ack_in,
        data_out => input_stream0_TKEEP_int_regslice,
        vld_out => regslice_both_input_stream0_V_keep_V_U_vld_out,
        ack_out => input_stream0_TREADY_int_regslice,
        apdone_blk => regslice_both_input_stream0_V_keep_V_U_apdone_blk);

    regslice_both_input_stream0_V_strb_V_U : component hls_snn_izikevich_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_stream0_TSTRB,
        vld_in => input_stream0_TVALID,
        ack_in => regslice_both_input_stream0_V_strb_V_U_ack_in,
        data_out => input_stream0_TSTRB_int_regslice,
        vld_out => regslice_both_input_stream0_V_strb_V_U_vld_out,
        ack_out => input_stream0_TREADY_int_regslice,
        apdone_blk => regslice_both_input_stream0_V_strb_V_U_apdone_blk);

    regslice_both_input_stream0_V_last_V_U : component hls_snn_izikevich_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_stream0_TLAST,
        vld_in => input_stream0_TVALID,
        ack_in => regslice_both_input_stream0_V_last_V_U_ack_in,
        data_out => input_stream0_TLAST_int_regslice,
        vld_out => regslice_both_input_stream0_V_last_V_U_vld_out,
        ack_out => input_stream0_TREADY_int_regslice,
        apdone_blk => regslice_both_input_stream0_V_last_V_U_apdone_blk);

    regslice_both_input_stream1_V_data_V_U : component hls_snn_izikevich_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_stream1_TDATA,
        vld_in => input_stream1_TVALID,
        ack_in => regslice_both_input_stream1_V_data_V_U_ack_in,
        data_out => input_stream1_TDATA_int_regslice,
        vld_out => input_stream1_TVALID_int_regslice,
        ack_out => input_stream1_TREADY_int_regslice,
        apdone_blk => regslice_both_input_stream1_V_data_V_U_apdone_blk);

    regslice_both_input_stream1_V_keep_V_U : component hls_snn_izikevich_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_stream1_TKEEP,
        vld_in => input_stream1_TVALID,
        ack_in => regslice_both_input_stream1_V_keep_V_U_ack_in,
        data_out => input_stream1_TKEEP_int_regslice,
        vld_out => regslice_both_input_stream1_V_keep_V_U_vld_out,
        ack_out => input_stream1_TREADY_int_regslice,
        apdone_blk => regslice_both_input_stream1_V_keep_V_U_apdone_blk);

    regslice_both_input_stream1_V_strb_V_U : component hls_snn_izikevich_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_stream1_TSTRB,
        vld_in => input_stream1_TVALID,
        ack_in => regslice_both_input_stream1_V_strb_V_U_ack_in,
        data_out => input_stream1_TSTRB_int_regslice,
        vld_out => regslice_both_input_stream1_V_strb_V_U_vld_out,
        ack_out => input_stream1_TREADY_int_regslice,
        apdone_blk => regslice_both_input_stream1_V_strb_V_U_apdone_blk);

    regslice_both_input_stream1_V_last_V_U : component hls_snn_izikevich_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_stream1_TLAST,
        vld_in => input_stream1_TVALID,
        ack_in => regslice_both_input_stream1_V_last_V_U_ack_in,
        data_out => input_stream1_TLAST_int_regslice,
        vld_out => regslice_both_input_stream1_V_last_V_U_vld_out,
        ack_out => input_stream1_TREADY_int_regslice,
        apdone_blk => regslice_both_input_stream1_V_last_V_U_apdone_blk);

    regslice_both_input_stream2_V_data_V_U : component hls_snn_izikevich_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_stream2_TDATA,
        vld_in => input_stream2_TVALID,
        ack_in => regslice_both_input_stream2_V_data_V_U_ack_in,
        data_out => input_stream2_TDATA_int_regslice,
        vld_out => input_stream2_TVALID_int_regslice,
        ack_out => input_stream2_TREADY_int_regslice,
        apdone_blk => regslice_both_input_stream2_V_data_V_U_apdone_blk);

    regslice_both_input_stream2_V_keep_V_U : component hls_snn_izikevich_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_stream2_TKEEP,
        vld_in => input_stream2_TVALID,
        ack_in => regslice_both_input_stream2_V_keep_V_U_ack_in,
        data_out => input_stream2_TKEEP_int_regslice,
        vld_out => regslice_both_input_stream2_V_keep_V_U_vld_out,
        ack_out => input_stream2_TREADY_int_regslice,
        apdone_blk => regslice_both_input_stream2_V_keep_V_U_apdone_blk);

    regslice_both_input_stream2_V_strb_V_U : component hls_snn_izikevich_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_stream2_TSTRB,
        vld_in => input_stream2_TVALID,
        ack_in => regslice_both_input_stream2_V_strb_V_U_ack_in,
        data_out => input_stream2_TSTRB_int_regslice,
        vld_out => regslice_both_input_stream2_V_strb_V_U_vld_out,
        ack_out => input_stream2_TREADY_int_regslice,
        apdone_blk => regslice_both_input_stream2_V_strb_V_U_apdone_blk);

    regslice_both_input_stream2_V_last_V_U : component hls_snn_izikevich_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_stream2_TLAST,
        vld_in => input_stream2_TVALID,
        ack_in => regslice_both_input_stream2_V_last_V_U_ack_in,
        data_out => input_stream2_TLAST_int_regslice,
        vld_out => regslice_both_input_stream2_V_last_V_U_vld_out,
        ack_out => input_stream2_TREADY_int_regslice,
        apdone_blk => regslice_both_input_stream2_V_last_V_U_apdone_blk);

    regslice_both_input_stream3_V_data_V_U : component hls_snn_izikevich_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_stream3_TDATA,
        vld_in => input_stream3_TVALID,
        ack_in => regslice_both_input_stream3_V_data_V_U_ack_in,
        data_out => input_stream3_TDATA_int_regslice,
        vld_out => input_stream3_TVALID_int_regslice,
        ack_out => input_stream3_TREADY_int_regslice,
        apdone_blk => regslice_both_input_stream3_V_data_V_U_apdone_blk);

    regslice_both_input_stream3_V_keep_V_U : component hls_snn_izikevich_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_stream3_TKEEP,
        vld_in => input_stream3_TVALID,
        ack_in => regslice_both_input_stream3_V_keep_V_U_ack_in,
        data_out => input_stream3_TKEEP_int_regslice,
        vld_out => regslice_both_input_stream3_V_keep_V_U_vld_out,
        ack_out => input_stream3_TREADY_int_regslice,
        apdone_blk => regslice_both_input_stream3_V_keep_V_U_apdone_blk);

    regslice_both_input_stream3_V_strb_V_U : component hls_snn_izikevich_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_stream3_TSTRB,
        vld_in => input_stream3_TVALID,
        ack_in => regslice_both_input_stream3_V_strb_V_U_ack_in,
        data_out => input_stream3_TSTRB_int_regslice,
        vld_out => regslice_both_input_stream3_V_strb_V_U_vld_out,
        ack_out => input_stream3_TREADY_int_regslice,
        apdone_blk => regslice_both_input_stream3_V_strb_V_U_apdone_blk);

    regslice_both_input_stream3_V_last_V_U : component hls_snn_izikevich_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_stream3_TLAST,
        vld_in => input_stream3_TVALID,
        ack_in => regslice_both_input_stream3_V_last_V_U_ack_in,
        data_out => input_stream3_TLAST_int_regslice,
        vld_out => regslice_both_input_stream3_V_last_V_U_vld_out,
        ack_out => input_stream3_TREADY_int_regslice,
        apdone_blk => regslice_both_input_stream3_V_last_V_U_apdone_blk);

    regslice_both_output_stream_V_data_V_U : component hls_snn_izikevich_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => output_stream_TDATA_int_regslice,
        vld_in => output_stream_TVALID_int_regslice,
        ack_in => output_stream_TREADY_int_regslice,
        data_out => output_stream_TDATA,
        vld_out => regslice_both_output_stream_V_data_V_U_vld_out,
        ack_out => output_stream_TREADY,
        apdone_blk => regslice_both_output_stream_V_data_V_U_apdone_blk);

    regslice_both_output_stream_V_keep_V_U : component hls_snn_izikevich_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv8_0,
        vld_in => output_stream_TVALID_int_regslice,
        ack_in => regslice_both_output_stream_V_keep_V_U_ack_in_dummy,
        data_out => output_stream_TKEEP,
        vld_out => regslice_both_output_stream_V_keep_V_U_vld_out,
        ack_out => output_stream_TREADY,
        apdone_blk => regslice_both_output_stream_V_keep_V_U_apdone_blk);

    regslice_both_output_stream_V_strb_V_U : component hls_snn_izikevich_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv8_0,
        vld_in => output_stream_TVALID_int_regslice,
        ack_in => regslice_both_output_stream_V_strb_V_U_ack_in_dummy,
        data_out => output_stream_TSTRB,
        vld_out => regslice_both_output_stream_V_strb_V_U_vld_out,
        ack_out => output_stream_TREADY,
        apdone_blk => regslice_both_output_stream_V_strb_V_U_apdone_blk);

    regslice_both_output_stream_V_last_V_U : component hls_snn_izikevich_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => output_stream_TLAST_int_regslice,
        vld_in => output_stream_TVALID_int_regslice,
        ack_in => regslice_both_output_stream_V_last_V_U_ack_in_dummy,
        data_out => output_stream_TLAST,
        vld_out => regslice_both_output_stream_V_last_V_U_vld_out,
        ack_out => output_stream_TREADY,
        apdone_blk => regslice_both_output_stream_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (state_read_read_fu_174_p2 = ap_const_lv1_0))) then 
                    grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_ap_ready = ap_const_logic_1)) then 
                    grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (state_read_read_fu_174_p2 = ap_const_lv1_1))) then 
                    grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_ap_ready = ap_const_logic_1)) then 
                    grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_ap_ready = ap_const_logic_1)) then 
                    grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_ap_ready = ap_const_logic_1)) then 
                    grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_snn_get_synaptic_conductances_fu_296_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_snn_get_synaptic_conductances_fu_296_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    grp_snn_get_synaptic_conductances_fu_296_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_snn_get_synaptic_conductances_fu_296_ap_ready = ap_const_logic_1)) then 
                    grp_snn_get_synaptic_conductances_fu_296_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_snn_get_synaptic_conductances_fu_296_firings_mem_0_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10) and (state_read_reg_428 = ap_const_lv1_1))) then
                firings_mem_0 <= grp_snn_get_synaptic_conductances_fu_296_firings_mem_0_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_neuron_type_mem_0_o_ap_vld = ap_const_logic_1))) then
                neuron_type_mem_0 <= grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_neuron_type_mem_0_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_neuron_type_mem_1_o_ap_vld = ap_const_logic_1))) then
                neuron_type_mem_1 <= grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_neuron_type_mem_1_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                output_indexes_mem_0 <= trunc_ln43_fu_368_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                output_indexes_mem_1 <= trunc_ln43_1_fu_378_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (state_read_read_fu_174_p2 = ap_const_lv1_1))) then
                p_input_read_reg_432 <= p_input;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                state_read_reg_428 <= state;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, state_read_read_fu_174_p2, ap_CS_fsm_state4, grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_ap_done, grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_ap_done, grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_ap_done, grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_block_state10_on_subcall_done, regslice_both_output_stream_V_data_V_U_apdone_blk, output_stream_TREADY_int_regslice)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (state_read_read_fu_174_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (state_read_read_fu_174_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state6 => 
                if (((grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((output_stream_TREADY_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                if (((output_stream_TREADY_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                if ((not(((output_stream_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_output_stream_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(ap_block_state10_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state10_on_subcall_done)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(output_stream_TREADY_int_regslice)
    begin
        if ((output_stream_TREADY_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state13_blk_assign_proc : process(output_stream_TREADY_int_regslice)
    begin
        if ((output_stream_TREADY_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state14_blk_assign_proc : process(regslice_both_output_stream_V_data_V_U_apdone_blk, output_stream_TREADY_int_regslice)
    begin
        if (((output_stream_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_output_stream_V_data_V_U_apdone_blk = ap_const_logic_1))) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_ap_done)
    begin
        if ((grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_ap_done)
    begin
        if ((grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_ap_done)
    begin
        if ((grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_ap_done)
    begin
        if ((grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state10_on_subcall_done_assign_proc : process(state_read_reg_428, grp_snn_get_synaptic_conductances_fu_296_ap_done)
    begin
                ap_block_state10_on_subcall_done <= ((grp_snn_get_synaptic_conductances_fu_296_ap_done = ap_const_logic_0) and (state_read_reg_428 = ap_const_lv1_1));
    end process;


    ap_block_state14_assign_proc : process(regslice_both_output_stream_V_data_V_U_apdone_blk, output_stream_TREADY_int_regslice)
    begin
                ap_block_state14 <= ((output_stream_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_output_stream_V_data_V_U_apdone_blk = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state14, regslice_both_output_stream_V_data_V_U_apdone_blk, output_stream_TREADY_int_regslice)
    begin
        if ((not(((output_stream_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_output_stream_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state14, regslice_both_output_stream_V_data_V_U_apdone_blk, output_stream_TREADY_int_regslice)
    begin
        if ((not(((output_stream_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_output_stream_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    bitcast_ln109_fu_406_p1 <= v_mem_q1;
    bitcast_ln110_fu_410_p1 <= v_mem_q0;
    c_fu_414_p3 <= (bitcast_ln110_fu_410_p1 & bitcast_ln109_fu_406_p1);

    grp_fu_465_ce_assign_proc : process(grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_grp_fu_465_p_ce, grp_snn_get_synaptic_conductances_fu_296_grp_fu_465_p_ce, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_465_ce <= grp_snn_get_synaptic_conductances_fu_296_grp_fu_465_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_465_ce <= grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_grp_fu_465_p_ce;
        else 
            grp_fu_465_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_465_opcode_assign_proc : process(grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_grp_fu_465_p_opcode, grp_snn_get_synaptic_conductances_fu_296_grp_fu_465_p_opcode, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_465_opcode <= grp_snn_get_synaptic_conductances_fu_296_grp_fu_465_p_opcode;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_465_opcode <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_grp_fu_465_p_opcode),2));
        else 
            grp_fu_465_opcode <= "XX";
        end if; 
    end process;


    grp_fu_465_p0_assign_proc : process(grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_grp_fu_465_p_din0, grp_snn_get_synaptic_conductances_fu_296_grp_fu_465_p_din0, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_465_p0 <= grp_snn_get_synaptic_conductances_fu_296_grp_fu_465_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_465_p0 <= grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_grp_fu_465_p_din0;
        else 
            grp_fu_465_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_465_p1_assign_proc : process(grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_grp_fu_465_p_din1, grp_snn_get_synaptic_conductances_fu_296_grp_fu_465_p_din1, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_465_p1 <= grp_snn_get_synaptic_conductances_fu_296_grp_fu_465_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_465_p1 <= grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_grp_fu_465_p_din1;
        else 
            grp_fu_465_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_469_ce_assign_proc : process(grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_grp_fu_469_p_ce, grp_snn_get_synaptic_conductances_fu_296_grp_fu_469_p_ce, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_469_ce <= grp_snn_get_synaptic_conductances_fu_296_grp_fu_469_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_469_ce <= grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_grp_fu_469_p_ce;
        else 
            grp_fu_469_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_469_p0_assign_proc : process(grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_grp_fu_469_p_din0, grp_snn_get_synaptic_conductances_fu_296_grp_fu_469_p_din0, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_469_p0 <= grp_snn_get_synaptic_conductances_fu_296_grp_fu_469_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_469_p0 <= grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_grp_fu_469_p_din0;
        else 
            grp_fu_469_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_469_p1_assign_proc : process(grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_grp_fu_469_p_din1, grp_snn_get_synaptic_conductances_fu_296_grp_fu_469_p_din1, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_469_p1 <= grp_snn_get_synaptic_conductances_fu_296_grp_fu_469_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_469_p1 <= grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_grp_fu_469_p_din1;
        else 
            grp_fu_469_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_ap_start <= grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_ap_start_reg;
    grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_ap_start <= grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_ap_start_reg;
    grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_ap_start <= grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_ap_start_reg;
    grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_ap_start <= grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_ap_start_reg;
    grp_snn_get_synaptic_conductances_fu_296_ap_start <= grp_snn_get_synaptic_conductances_fu_296_ap_start_reg;
    input_stream0_TREADY <= regslice_both_input_stream0_V_data_V_U_ack_in;

    input_stream0_TREADY_int_regslice_assign_proc : process(state_read_reg_428, grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_input_stream0_TREADY, grp_snn_get_synaptic_conductances_fu_296_input_stream0_TREADY, ap_CS_fsm_state2, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (state_read_reg_428 = ap_const_lv1_1))) then 
            input_stream0_TREADY_int_regslice <= grp_snn_get_synaptic_conductances_fu_296_input_stream0_TREADY;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_stream0_TREADY_int_regslice <= grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_15_2_fu_254_input_stream0_TREADY;
        else 
            input_stream0_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    input_stream1_TREADY <= regslice_both_input_stream1_V_data_V_U_ack_in;

    input_stream1_TREADY_int_regslice_assign_proc : process(state_read_reg_428, grp_snn_get_synaptic_conductances_fu_296_input_stream1_TREADY, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (state_read_reg_428 = ap_const_lv1_1))) then 
            input_stream1_TREADY_int_regslice <= grp_snn_get_synaptic_conductances_fu_296_input_stream1_TREADY;
        else 
            input_stream1_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    input_stream2_TREADY <= regslice_both_input_stream2_V_data_V_U_ack_in;

    input_stream2_TREADY_int_regslice_assign_proc : process(state_read_reg_428, grp_snn_get_synaptic_conductances_fu_296_input_stream2_TREADY, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (state_read_reg_428 = ap_const_lv1_1))) then 
            input_stream2_TREADY_int_regslice <= grp_snn_get_synaptic_conductances_fu_296_input_stream2_TREADY;
        else 
            input_stream2_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    input_stream3_TREADY <= regslice_both_input_stream3_V_data_V_U_ack_in;

    input_stream3_TREADY_int_regslice_assign_proc : process(state_read_reg_428, grp_snn_get_synaptic_conductances_fu_296_input_stream3_TREADY, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (state_read_reg_428 = ap_const_lv1_1))) then 
            input_stream3_TREADY_int_regslice <= grp_snn_get_synaptic_conductances_fu_296_input_stream3_TREADY;
        else 
            input_stream3_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    output_indexes_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            output_indexes_address0 <= ap_const_lv64_1(1 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_indexes_address0 <= ap_const_lv64_0(1 - 1 downto 0);
        else 
            output_indexes_address0 <= "X";
        end if; 
    end process;


    output_indexes_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_ap_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            output_indexes_ce0 <= ap_const_logic_1;
        else 
            output_indexes_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_stream_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, output_stream_TREADY_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            output_stream_TDATA_blk_n <= output_stream_TREADY_int_regslice;
        else 
            output_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    output_stream_TDATA_int_regslice_assign_proc : process(firings_mem_0, ap_CS_fsm_state12, ap_CS_fsm_state13, c_fu_414_p3, output_stream_TREADY_int_regslice)
    begin
        if ((output_stream_TREADY_int_regslice = ap_const_logic_1)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                output_stream_TDATA_int_regslice <= firings_mem_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                output_stream_TDATA_int_regslice <= c_fu_414_p3;
            else 
                output_stream_TDATA_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            output_stream_TDATA_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_stream_TLAST_int_regslice_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state13, output_stream_TREADY_int_regslice)
    begin
        if ((output_stream_TREADY_int_regslice = ap_const_logic_1)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                output_stream_TLAST_int_regslice <= ap_const_lv1_1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                output_stream_TLAST_int_regslice <= ap_const_lv1_0;
            else 
                output_stream_TLAST_int_regslice <= "X";
            end if;
        else 
            output_stream_TLAST_int_regslice <= "X";
        end if; 
    end process;

    output_stream_TVALID <= regslice_both_output_stream_V_data_V_U_vld_out;

    output_stream_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state13, output_stream_TREADY_int_regslice)
    begin
        if ((((output_stream_TREADY_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((output_stream_TREADY_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12)))) then 
            output_stream_TVALID_int_regslice <= ap_const_logic_1;
        else 
            output_stream_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    p_mem_address0_assign_proc : process(grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_p_mem_address0, grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_p_mem_address0, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_mem_address0 <= grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_p_mem_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_mem_address0 <= grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_p_mem_address0;
        else 
            p_mem_address0 <= "XXX";
        end if; 
    end process;


    p_mem_ce0_assign_proc : process(grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_p_mem_ce0, grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_p_mem_ce0, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_mem_ce0 <= grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_p_mem_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_mem_ce0 <= grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_p_mem_ce0;
        else 
            p_mem_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_mem_we0_assign_proc : process(grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_p_mem_we0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_mem_we0 <= grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_43_2_fu_270_p_mem_we0;
        else 
            p_mem_we0 <= ap_const_logic_0;
        end if; 
    end process;

    state_read_read_fu_174_p2 <= state;

    synapse_s_mem_address0_assign_proc : process(state_read_reg_428, grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_synapse_s_mem_address0, grp_snn_get_synaptic_conductances_fu_296_synapse_s_mem_address0, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (state_read_reg_428 = ap_const_lv1_1))) then 
            synapse_s_mem_address0 <= grp_snn_get_synaptic_conductances_fu_296_synapse_s_mem_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            synapse_s_mem_address0 <= grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_synapse_s_mem_address0;
        else 
            synapse_s_mem_address0 <= "XXXX";
        end if; 
    end process;


    synapse_s_mem_ce0_assign_proc : process(state_read_reg_428, grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_synapse_s_mem_ce0, grp_snn_get_synaptic_conductances_fu_296_synapse_s_mem_ce0, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (state_read_reg_428 = ap_const_lv1_1))) then 
            synapse_s_mem_ce0 <= grp_snn_get_synaptic_conductances_fu_296_synapse_s_mem_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            synapse_s_mem_ce0 <= grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_synapse_s_mem_ce0;
        else 
            synapse_s_mem_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    synapse_s_mem_ce1_assign_proc : process(grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_synapse_s_mem_ce1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            synapse_s_mem_ce1 <= grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_synapse_s_mem_ce1;
        else 
            synapse_s_mem_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    synapse_s_mem_we0_assign_proc : process(grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_synapse_s_mem_we0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            synapse_s_mem_we0 <= grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_synapse_s_mem_we0;
        else 
            synapse_s_mem_we0 <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln43_1_fu_378_p1 <= output_indexes_q0(4 - 1 downto 0);
    trunc_ln43_fu_368_p1 <= output_indexes_q0(4 - 1 downto 0);

    u_mem_address0_assign_proc : process(state_read_reg_428, ap_CS_fsm_state4, grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_u_mem_address0, grp_snn_get_synaptic_conductances_fu_296_u_mem_address0, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (state_read_reg_428 = ap_const_lv1_1))) then 
            u_mem_address0 <= grp_snn_get_synaptic_conductances_fu_296_u_mem_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            u_mem_address0 <= grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_u_mem_address0;
        else 
            u_mem_address0 <= "XXXX";
        end if; 
    end process;


    u_mem_ce0_assign_proc : process(state_read_reg_428, ap_CS_fsm_state4, grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_u_mem_ce0, grp_snn_get_synaptic_conductances_fu_296_u_mem_ce0, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (state_read_reg_428 = ap_const_lv1_1))) then 
            u_mem_ce0 <= grp_snn_get_synaptic_conductances_fu_296_u_mem_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            u_mem_ce0 <= grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_u_mem_ce0;
        else 
            u_mem_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    u_mem_ce1_assign_proc : process(state_read_reg_428, grp_snn_get_synaptic_conductances_fu_296_u_mem_ce1, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (state_read_reg_428 = ap_const_lv1_1))) then 
            u_mem_ce1 <= grp_snn_get_synaptic_conductances_fu_296_u_mem_ce1;
        else 
            u_mem_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    u_mem_d0_assign_proc : process(state_read_reg_428, ap_CS_fsm_state4, grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_u_mem_d0, grp_snn_get_synaptic_conductances_fu_296_u_mem_d0, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (state_read_reg_428 = ap_const_lv1_1))) then 
            u_mem_d0 <= grp_snn_get_synaptic_conductances_fu_296_u_mem_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            u_mem_d0 <= grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_u_mem_d0;
        else 
            u_mem_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    u_mem_we0_assign_proc : process(state_read_reg_428, ap_CS_fsm_state4, grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_u_mem_we0, grp_snn_get_synaptic_conductances_fu_296_u_mem_we0, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (state_read_reg_428 = ap_const_lv1_1))) then 
            u_mem_we0 <= grp_snn_get_synaptic_conductances_fu_296_u_mem_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            u_mem_we0 <= grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_u_mem_we0;
        else 
            u_mem_we0 <= ap_const_logic_0;
        end if; 
    end process;


    v_mem_address0_assign_proc : process(state_read_reg_428, ap_CS_fsm_state4, ap_CS_fsm_state11, grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_v_mem_address0, grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_v_mem_address0, grp_snn_get_synaptic_conductances_fu_296_v_mem_address0, ap_CS_fsm_state8, ap_CS_fsm_state10, zext_ln74_1_fu_401_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            v_mem_address0 <= zext_ln74_1_fu_401_p1(4 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (state_read_reg_428 = ap_const_lv1_1))) then 
            v_mem_address0 <= grp_snn_get_synaptic_conductances_fu_296_v_mem_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            v_mem_address0 <= grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_v_mem_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            v_mem_address0 <= grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_v_mem_address0;
        else 
            v_mem_address0 <= "XXXX";
        end if; 
    end process;

    v_mem_address1 <= zext_ln74_fu_392_p1(4 - 1 downto 0);

    v_mem_ce0_assign_proc : process(state_read_reg_428, ap_CS_fsm_state4, ap_CS_fsm_state11, grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_v_mem_ce0, grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_v_mem_ce0, grp_snn_get_synaptic_conductances_fu_296_v_mem_ce0, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            v_mem_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (state_read_reg_428 = ap_const_lv1_1))) then 
            v_mem_ce0 <= grp_snn_get_synaptic_conductances_fu_296_v_mem_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            v_mem_ce0 <= grp_hls_snn_izikevich_Pipeline_synapses_layer_updates_VITIS_LOOP_22_1_fu_286_v_mem_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            v_mem_ce0 <= grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_v_mem_ce0;
        else 
            v_mem_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v_mem_ce1_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            v_mem_ce1 <= ap_const_logic_1;
        else 
            v_mem_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    v_mem_d0_assign_proc : process(state_read_reg_428, ap_CS_fsm_state4, grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_v_mem_d0, grp_snn_get_synaptic_conductances_fu_296_v_mem_d0, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (state_read_reg_428 = ap_const_lv1_1))) then 
            v_mem_d0 <= grp_snn_get_synaptic_conductances_fu_296_v_mem_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            v_mem_d0 <= grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_v_mem_d0;
        else 
            v_mem_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    v_mem_we0_assign_proc : process(state_read_reg_428, ap_CS_fsm_state4, grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_v_mem_we0, grp_snn_get_synaptic_conductances_fu_296_v_mem_we0, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (state_read_reg_428 = ap_const_lv1_1))) then 
            v_mem_we0 <= grp_snn_get_synaptic_conductances_fu_296_v_mem_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            v_mem_we0 <= grp_hls_snn_izikevich_Pipeline_VITIS_LOOP_47_2_fu_278_v_mem_we0;
        else 
            v_mem_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln74_1_fu_401_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(output_indexes_mem_1),64));
    zext_ln74_fu_392_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(output_indexes_mem_0),64));
end behav;
