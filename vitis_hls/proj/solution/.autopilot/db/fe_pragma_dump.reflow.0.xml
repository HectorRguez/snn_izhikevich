<pragmas>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<32>::ap_uint(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<32>::ap_uint(unsigned int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::operator[](int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<1>::ap_uint<32, false>(ap_bit_ref<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2023.1/common/technology/autopilot/etc/ap_common.h" line="523" pragmaType="inline" parentfunction="ssdm_int<64, false>::ssdm_int(unsigned long)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<8>::ap_uint()" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<8, false>::ap_int_base()" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, true>::ap_int_base()" off="0" region="0" recursive="0"/>
<pragma file="src/snn_izhikevich_axi.h" line="17" pragmaType="pipeline" parentfunction="axis_cp_network_to_mem" off="0" ii="2" rewind="0" style=""/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<1, false>::ap_int_base<32, false>(ap_bit_ref<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_bit_ref<32, false>::operator bool() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_bit_ref<32, false>::ap_bit_ref(ap_int_base<32, false>*, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::ap_int_base(unsigned int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_range_ref<256, false>& ap_range_ref<256, false>::operator=<256, false>(ap_int_base<256, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<256, false>::ap_int_base<256, false>(ap_range_ref<256, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_range_ref<256, false>& ap_range_ref<256, false>::operator=<64, false>(ap_int_base<64, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, false>::ap_int_base<64, false>(ap_range_ref<64, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowCsim" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<256, false>::ap_int_base<64, false>(ap_int_base<64, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2023.1/common/technology/autopilot/etc/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi256ELb0EEC2EDq256_j" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get_user_ptr" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<1>::ap_uint<64, false>(ap_bit_ref<64, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<1, false>::ap_int_base<64, false>(ap_bit_ref<64, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_bit_ref<64, false>::operator bool() const" off="0" region="0" recursive="0"/>
<pragma file="src/snn_izhikevich_axi.h" line="46" pragmaType="pipeline" parentfunction="axis_cp_inputs_to_mem" off="0" ii="2" rewind="0" style=""/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_range_ref<64, false>::ap_range_ref(ap_int_base<64, false>*, int, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, false>::ap_int_base<64, true>(ap_int_base<64, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, false>::ap_int_base()" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2023.1/common/technology/autopilot/etc/ap_common.h" line="0" pragmaType="inline" parentfunction="ssdm_int<1, false>::ssdm_int()" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<1>::ap_uint()" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<1, false>::ap_int_base()" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="range" off="0" region="0" recursive="0"/>
<pragma file="src/snn_izhikevich.h" line="23" pragmaType="pipeline" parentfunction="snn_update_neuron_synapses" off="0" ii="1" rewind="0" style=""/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool operator==<1, false>(ap_int_base<1, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool ap_int_base<1, false>::operator==<32, true>(ap_int_base<32, true> const&) const" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2023.1/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="ssdm_int<32, true>::ssdm_int(int)" off="0" region="0" recursive="0"/>
<pragma file="src/snn_izhikevich.h" line="156" pragmaType="pipeline" parentfunction="snn_get_synaptic_conductances" off="0" ii="7" rewind="0" style=""/>
<pragma file="src/snn_izhikevich.h" line="146" pragmaType="array_reshape" parentfunction="snn_get_synaptic_conductances" dim="2" factor="0" mode="complete" variable="neuron_type"/>
<pragma file="src/snn_izhikevich.h" line="147" pragmaType="array_partition" parentfunction="snn_get_synaptic_conductances" dim="1" factor="10" mode="block" dynamic="0" variable="_ZZ29snn_get_synaptic_conductancesPA6_K7ap_uintILi1EEPA6_KfPfS7_RN3hls6streamINS8_4axisI6ap_intILi64EELm0ELm0ELm0EEELi0EEESF_SF_SF_PS_ILi64EEE13synapse_fetch"/>
<pragma file="src/snn_izhikevich.h" line="148" pragmaType="array_partition" parentfunction="snn_get_synaptic_conductances" dim="1" factor="10" mode="block" dynamic="0" variable="_ZZ29snn_get_synaptic_conductancesPA6_K7ap_uintILi1EEPA6_KfPfS7_RN3hls6streamINS8_4axisI6ap_intILi64EELm0ELm0ELm0EEELi0EEESF_SF_SF_PS_ILi64EEE13synapse_cache"/>
<pragma file="src/snn_izhikevich.h" line="189" pragmaType="bind_op" parentfunction="snn_get_synaptic_conductances" op="11" impl="12" latency="8"/>
<pragma file="src/snn_izhikevich.h" line="189" pragmaType="bind_op" parentfunction="snn_get_synaptic_conductances" op="9" impl="12" latency="8"/>
<pragma file="src/snn_izhikevich.h" line="190" pragmaType="bind_op" parentfunction="snn_get_synaptic_conductances" op="11" impl="12" latency="8"/>
<pragma file="src/snn_izhikevich.h" line="190" pragmaType="bind_op" parentfunction="snn_get_synaptic_conductances" op="9" impl="12" latency="8"/>
<pragma file="src/snn_izhikevich.h" line="98" pragmaType="inline" parentfunction="get_weight_line" off="0" region="0" recursive="0"/>
<pragma file="src/snn_types.h" line="94" pragmaType="inline" parentfunction="uint32_to_float32" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<32>::ap_uint<256, false>(ap_range_ref<256, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="to_uint" off="0" region="0" recursive="0"/>
<pragma file="src/snn_izhikevich.h" line="45" pragmaType="inline" parentfunction="snn_update_izikevich_equations_by_neuron" off="0" region="0" recursive="0"/>
<pragma file="src/snn_izhikevich.h" line="85" pragmaType="bind_op" parentfunction="snn_update_izikevich_equations_by_neuron" op="11" impl="12" latency="8"/>
<pragma file="src/snn_izhikevich.h" line="85" pragmaType="bind_op" parentfunction="snn_update_izikevich_equations_by_neuron" op="9" impl="12" latency="8"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, false>::operator[](int)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2023.1/common/technology/autopilot/etc/ap_common.h" line="0" pragmaType="inline" parentfunction="ssdm_int<32, false>::ssdm_int()" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_bit_ref<64, false>::ap_bit_ref(ap_int_base<64, false>*, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<1, false>::operator unsigned long long() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::ap_int_base<256, false>(ap_range_ref<256, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<256, false>::ap_int_base()" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_range_ref<256, false>::ap_range_ref(ap_int_base<256, false>*, int, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<256>::ap_uint()" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="read" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<64>::ap_uint<64>(ap_int<64> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="range" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_range_ref<256, false>::operator=(ap_range_ref<256, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<64>::ap_uint()" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2023.1/common/technology/autopilot/etc/ap_common.h" line="523" pragmaType="inline" parentfunction="ssdm_int<32, false>::ssdm_int(unsigned int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="src/snn_types.h" line="100" pragmaType="inline" parentfunction="float32_to_uint64" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<64>::ap_int(unsigned long)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<1>::ap_uint(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="write" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="to_uint64" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<64>::ap_int(unsigned long long)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, true>::ap_int_base(unsigned long long)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2023.1/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="ssdm_int<64, true>::ssdm_int(long)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<1, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2023.1/common/technology/autopilot/etc/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi1ELb0EEC2EDq1_j" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, true>::ap_int_base(unsigned long)" off="0" region="0" recursive="0"/>
<pragma file="src/snn_izhikevich_top.cpp" line="41" pragmaType="pipeline" parentfunction="hls_snn_initialize" off="0" ii="-1" rewind="0" style=""/>
<pragma file="src/snn_izhikevich_top.cpp" line="35" pragmaType="unroll" parentfunction="hls_snn_initialize" factor="-1" skip_exit_check="0"/>
<pragma file="src/snn_izhikevich_top.cpp" line="74" pragmaType="interface" parentfunction="hls_snn_izikevich" mode="s_axilite" port="" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="src/snn_izhikevich_top.cpp" line="75" pragmaType="interface" parentfunction="hls_snn_izikevich" mode="s_axilite" port="state" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="src/snn_izhikevich_top.cpp" line="76" pragmaType="interface" parentfunction="hls_snn_izikevich" mode="s_axilite" port="p_input" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="src/snn_izhikevich_top.cpp" line="77" pragmaType="interface" parentfunction="hls_snn_izikevich" mode="s_axilite" port="output_indexes" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="src/snn_izhikevich_top.cpp" line="78" pragmaType="interface" parentfunction="hls_snn_izikevich" mode="axis" port="input_stream0" register="0" register_mode="both" name="" depth="-1"/>
<pragma file="src/snn_izhikevich_top.cpp" line="79" pragmaType="interface" parentfunction="hls_snn_izikevich" mode="axis" port="input_stream1" register="0" register_mode="both" name="" depth="-1"/>
<pragma file="src/snn_izhikevich_top.cpp" line="80" pragmaType="interface" parentfunction="hls_snn_izikevich" mode="axis" port="input_stream2" register="0" register_mode="both" name="" depth="-1"/>
<pragma file="src/snn_izhikevich_top.cpp" line="81" pragmaType="interface" parentfunction="hls_snn_izikevich" mode="axis" port="input_stream3" register="0" register_mode="both" name="" depth="-1"/>
<pragma file="src/snn_izhikevich_top.cpp" line="82" pragmaType="interface" parentfunction="hls_snn_izikevich" mode="axis" port="output_stream" register="0" register_mode="both" name="" depth="-1"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_bit_ref<64, false>::operator=(bool)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2023.1/common/technology/autopilot/etc/ap_common.h" line="0" pragmaType="inline" parentfunction="ssdm_int<256, false>::ssdm_int()" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_range_ref<256, false>& ap_range_ref<256, false>::operator=<64, false>(ap_range_ref<64, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2023.1/common/technology/autopilot/etc/ap_common.h" line="0" pragmaType="inline" parentfunction="ssdm_int<64, true>::ssdm_int()" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<64>::ap_int()" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get_id_ptr" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get_dest_ptr" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2023.1/common/technology/autopilot/etc/ap_common.h" line="0" pragmaType="inline" parentfunction="ssdm_int<8, false>::ssdm_int()" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2023.1/common/technology/autopilot/etc/ap_common.h" line="0" pragmaType="inline" parentfunction="ssdm_int<64, false>::ssdm_int()" off="0" region="0" recursive="0"/>
</pragmas>
